initSidebarItems({"enum":[["ArgPolarity","Whether an argument is an input or an output."],["Def","One toplevel form in an ISLE file."],["Expr","An expression: the right-hand side of a rule."],["Extern","An external binding: an extractor or constructor function attached to a term."],["Pattern","A pattern: the left-hand side of a rule."],["TermArgPattern","A pattern in a term argument. Adds “evaluated expression” to kinds of patterns in addition to all options in `Pattern`."],["TypeValue","The actual type-value: a primitive or an enum with variants."]],"struct":[["Decl","A declaration of a term with its argument and return types."],["Defs","The parsed form of an ISLE file."],["Extractor","An extractor macro: (A x y) becomes (B x _ y …). Expanded during ast-to-sema pass."],["Field","One field of an enum variant."],["Ident","An identifier – a variable, term symbol, or type."],["LetDef","One variable locally bound in a `(let ...)` expression."],["Rule",""],["Type","A declaration of a type."],["Variant","One variant of an enum type."]]});